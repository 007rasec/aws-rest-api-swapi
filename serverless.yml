service: aws-rest-api-swapi

frameworkVersion: '2'

plugins:
  - serverless-offline
  - serverless-plugin-include-dependencies
  - serverless-dynamodb-local

custom:
  tableName: 'people'
  dynamodb:
    start:
      migrate: true
    stages:
      - dev


package:
  exclude:
    - node_modules/**
provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - {"Fn::GetAtt": ["PeopleDynamoDBTable", "Arn"]}
  environment:
    USERS_TABLE: ${self:custom.tableName}
    SWAPI_URL: https://swapi.py4e.com/api

resources:
  Resources:
    PeopleDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hola-mundo
          method: get
  crearPeople:
    handler: src/people.crearPeople
    events:
      - http:
          path: people
          method: post

  listarPeople:
    handler: src/people.listarPeople
    events:
      - http:
          path: people
          method: get
  obtenerPeople:
    handler: src/people.obtenerPeople
    events:
      - http:
          path: people/{id}
          method: get
  actualizarPeople:
    handler: src/people.actualizarPeople
    events:
      - http:
          path: people/{id}
          method: put
  eliminarPeople:
    handler: src/people.eliminarPeople
    events:
      - http:
          path: people/{id}
          method: delete

